3217. Delete Nodes From Linked List Present in Array

You are given an array of integers nums and the head of a linked list. Return the head of the modified linked list after removing all nodes from the linked list that have a value that exists in nums.

 

Example 1:

Input: nums = [1,2,3], head = [1,2,3,4,5]

Output: [4,5]

Remove the nodes with values 1, 2, and 3.

Example 2:

Input: nums = [1], head = [1,2,1,2,1,2]

Output: [2,2,2]

Remove the nodes with value 1.

Example 3:

Input: nums = [5], head = [1,2,3,4]

Output: [1,2,3,4]

No node has value 5.

Solution Code:

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 #define maxN 100005
struct ListNode* modifiedList(int* nums, int numsSize, struct ListNode* head) {
    typedef struct ListNode  node;
     int presented[maxN] = {0};
    for (int i = 0; i < numsSize; i++) {
        presented[nums[i]]++;
    }
    node *dummy = (node*)malloc(sizeof(node));
    dummy->next = head;
    node *prev = dummy;
    node *curr = head;
    while (curr != NULL) {
        if (presented[curr->val]) {
            prev->next = curr->next;
            free(curr);
            curr = prev->next;
        } else {
            prev = curr;
            curr = curr->next;
        }
    }
    node *res = dummy->next;
    free(dummy);
    return res;
}

